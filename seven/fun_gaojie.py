#-*-coding:utf-8-*-
"""高阶函数map()和reduce()函数"""
#-----------------------------------------------------------------------------------------------------------------------
#map()函数接收两个参数，一个是函数，一个是Iterable，map将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回
for item in map(str,[1,2,3,4,5]):
    print(item,end='')
print(list(map(str,[1,2,3,4,5])))#['1', '2', '3', '4', '5'],一次性将list中的数字转换为字符串型的list

#-----------------------------------------------------------------------------------------------------------------------
#reduce()函数把一个函数作用在一个序列[x1, x2, x3, ...]上，这个函数必须接收两个参数，reduce把结果作为下次函数运算的第一个入参：
#其结果未：reduce(f, [x1, x2, x3, x4]) = f(f(f(x1, x2), x3), x4)
from functools import reduce
def add(x,y):
    return x+y
print(reduce(add,[1,2,3,4]))


def product(x,y):
    return x*y
print(reduce(product,[1,2,5]))
#-----------------------------------------------------------------------------------------------------------------------
#filter()也接收一个函数和一个序列。和map()不同的是，filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。
#exam1,只留奇数
def is_odd(num):
    if num%2==1:
        return num
print(list(filter(is_odd,[1,2,3,4,5,6])))
#exam2,去掉列表中的空字符串
def not_empty(s):
    return s and s.strip()
print(list(filter(not_empty,['A','B','','','F'])))
#-----------------------------------------------------------------------------------------------------------------------
#sorted()函数，接收一个关键字key来实现自定义排序
#exam1，按绝对值排序
print(sorted([-8,1,2,3,4,-5,-9],key=abs))#abs()是个函数,[1, 2, 3, 4, -5, -8, -9],key=abs，即排序前对待排元素取绝对值
#exam2,忽略大小字母的字符串排序
print(sorted(['Acv','acb','Ysn','td','cf'],key=str.lower))
#-----------------------------------------------------------------------------------------------------------------------
#练习
#1.利用map()函数，把用户输入的不规范的英文名字，变为首字母大写，其他小写的规范名字。输入：['adam', 'LISA', 'barT']，输出：['Adam', 'Lisa', 'Bart']：
def normalize(name):
    if 65<=ord(name[0])<=90:
        return name[0] + name[1:].lower()
    else:
        return name[0].upper()+name[1:].lower()
print(list(map(normalize,['adam', 'LISA', 'barT'])))